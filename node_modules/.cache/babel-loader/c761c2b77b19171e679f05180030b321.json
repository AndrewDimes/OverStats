{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\source\\\\repos\\\\OverStats\\\\src\\\\pages\\\\LoginPage\\\\LoginPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport userService from '../../utils/userService';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginPage(props) {\n  _s();\n\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState('');\n  const [state, setState] = useState({\n    email: '',\n    password: ''\n  });\n  const history = useHistory();\n\n  function handleChange(e) {\n    setState({ ...state,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      props.handleSignUpOrLogin();\n      history.push('/profile');\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      setError(err.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    className: \"ui vertically divided grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blue eight wide column BigLogo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BigLogo-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"ow\",\n            src: \"../../retry.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 73\n          }, this), \"                    \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sidebar\",\n        className: \" eight wide column LandingMessage\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"right-items\",\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"login-title\",\n            children: \"Log In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"login-form\",\n            autoComplete: \"off\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"email\",\n              value: state.email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"password\",\n              value: state.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"blue\",\n              fluid: true,\n              size: \"large\",\n              type: \"submit\",\n              className: \"btn\",\n              disabled: invalidForm,\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              children: [\"New to us? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/signup\",\n                children: \"Sign Up\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 44\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              error: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 38\n            }, this) : null, /*#__PURE__*/_jsxDEV(Message, {\n              className: \"test-msg\",\n              children: [\"For testing purposes: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 81\n              }, this), \"Email - tester@email.com\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 114\n              }, this), \"Password - tester\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginPage, \"ICju9izVJgPQxjjcYDGJLiPuIqc=\", false, function () {\n  return [useHistory];\n});\n\n_c = LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["C:/Users/Andrew/source/repos/OverStats/src/pages/LoginPage/LoginPage.jsx"],"names":["React","useState","ErrorMessage","userService","useHistory","Link","Button","Form","Message","LoginPage","props","invalidForm","setValidForm","error","setError","state","setState","email","password","history","handleChange","e","target","name","value","handleSubmit","preventDefault","login","handleSignUpOrLogin","push","err","message"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginPage.css';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\r\nimport userService from '../../utils/userService';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\n\r\n\r\nexport default function LoginPage(props) {\r\n    const [invalidForm, setValidForm] = useState(false);\r\n    const [error, setError] = useState('')\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const history = useHistory();\r\n\r\n    function handleChange(e) {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            await userService.login(state);\r\n            props.handleSignUpOrLogin()\r\n            history.push('/profile')\r\n\r\n        } catch (err) {\r\n            // Invalid user data (probably duplicate email)\r\n            setError(err.message)\r\n        }\r\n    }\r\n    return (\r\n        <div id=\"main\" className=\"ui vertically divided grid\">\r\n            <div className=\"row\">\r\n                <div className=\"blue eight wide column BigLogo\">\r\n                    <div className=\"BigLogo-content\">\r\n                        <img className=\"ow\" src=\"../../retry.png\"></img><br></br>                    </div>\r\n\r\n                </div>\r\n                <div id=\"sidebar\" className=\" eight wide column LandingMessage\">\r\n                    <div id=\"right-items\" className=\"content\">\r\n\r\n                        <h1 className=\"login-title\">Log In</h1>\r\n                        <Form className=\"login-form\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n                            <Form.Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"email\"\r\n                                value={state.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"password\"\r\n                                value={state.password}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Button\r\n                                color='blue'\r\n                                fluid size='large'\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                                disabled={invalidForm}\r\n                            >\r\n                                Login\r\n                </Button>\r\n\r\n                            <Message>\r\n                                New to us? <Link to='/signup'>Sign Up</Link>\r\n                            </Message>\r\n                            {error ? <ErrorMessage error={error} /> : null}\r\n                            <Message className=\"test-msg\">For testing purposes: <br></br>Email - tester@email.com<br></br>Password - tester</Message>\r\n\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}