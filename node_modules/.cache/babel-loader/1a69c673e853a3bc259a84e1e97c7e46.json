{"ast":null,"code":"function setToken(token) {\n  if (token) {\n    // localStorage is given to us by the browser\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n}\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\nexport default {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};","map":{"version":3,"names":["setToken","token","localStorage","setItem","removeItem","getToken","getItem","payload","JSON","parse","atob","split","exp","Date","now","getUserFromToken","user","removeToken"],"sources":["C:/Users/Andrew/source/repos/OverStats/src/utils/tokenService.js"],"sourcesContent":["function setToken(token) {\r\n  if (token) {\r\n    // localStorage is given to us by the browser\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    localStorage.removeItem('token');\r\n  }\r\n}\r\n\r\nfunction getToken() {\r\n  let token = localStorage.getItem('token');\r\n  if (token) {\r\n    // Check if expired, remove if it is\r\n    // atob is a function that decodes a base-64 string\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\r\n    if (payload.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('token');\r\n      token = null;\r\n    }\r\n  }\r\n  return token;\r\n}\r\n\r\nfunction getUserFromToken() {\r\n  const token = getToken();\r\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\r\n}\r\n\r\nfunction removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n  getUserFromToken\r\n};"],"mappings":"AAAA,SAASA,QAAQ,CAACC,KAAK,EAAE;EACvB,IAAIA,KAAK,EAAE;IACT;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;EACtC,CAAC,MAAM;IACLC,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;EAClC;AACF;AAEA,SAASC,QAAQ,GAAG;EAClB,IAAIJ,KAAK,GAAGC,YAAY,CAACI,OAAO,CAAC,OAAO,CAAC;EACzC,IAAIL,KAAK,EAAE;IACT;IACA;IACA,MAAMM,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD;IACA,IAAIJ,OAAO,CAACK,GAAG,GAAGC,IAAI,CAACC,GAAG,EAAE,GAAG,IAAI,EAAE;MACnCZ,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;MAChCH,KAAK,GAAG,IAAI;IACd;EACF;EACA,OAAOA,KAAK;AACd;AAEA,SAASc,gBAAgB,GAAG;EAC1B,MAAMd,KAAK,GAAGI,QAAQ,EAAE;EACxB,OAAOJ,KAAK,GAAGO,IAAI,CAACC,KAAK,CAACC,IAAI,CAACT,KAAK,CAACU,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACK,IAAI,GAAG,IAAI;AAClE;AAEA,SAASC,WAAW,GAAG;EACrBf,YAAY,CAACE,UAAU,CAAC,OAAO,CAAC;AAClC;AAEA,eAAe;EACbJ,QAAQ;EACRK,QAAQ;EACRY,WAAW;EACXF;AACF,CAAC"},"metadata":{},"sourceType":"module"}