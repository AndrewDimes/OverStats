{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\source\\\\repos\\\\OverStats\\\\src\\\\pages\\\\EditProfilePage\\\\EditProfilePage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport userService from '../../utils/userService';\nimport NavBar from '../../components/NavBar/NavBar';\nimport SearchForm from '../../components/SearchForm/SearchForm';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EditProfilePage({\n  user,\n  handleLogOut,\n  handleSignUpOrLogin\n}) {\n  _s();\n\n  const [error, setError] = useState(''); //this updates with the users input\n\n  const [state, setState] = useState({\n    battletag: user.battletag,\n    platform: user.platform,\n    region: user.region\n  });\n  const history = useHistory();\n\n  async function editProfile() {\n    try {\n      const data = await userService.edit(state, user._id); /// sending over new user information\n\n      console.log(data, 'in editprofile after userService.edit');\n      handleSignUpOrLogin();\n      history.push('/profile');\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  function handleSubmit() {\n    let p = state.battletag.replace('#', '-'); //checking to make sure the new user information is valid in the API otherwise send invalid to user\n\n    const makeApiCall = () => {\n      fetch(`https://ow-api.com/v1/stats/${state.platform}/${state.region}/${p}/complete`).then(res => res.json()).catch(function () {}).then(data => {\n        if (data.error) {\n          setError('Invalid Entry');\n        } else if (data) {\n          console.log('did work');\n          editProfile();\n        } else {\n          setError('Invalid Entry');\n        }\n      });\n    };\n\n    makeApiCall();\n  } //update state\n\n\n  function handleChange(e) {\n    ///getting the name key for state\n    let name;\n\n    if (e.target.textContent === 'PC' || e.target.textContent === 'XBL' || e.target.textContent === 'PSN') {\n      name = \"platform\";\n    }\n\n    if (e.target.textContent === 'US' || e.target.textContent === 'EU' || e.target.textContent === 'ASIA') {\n      name = \"region\";\n    }\n\n    if (e.target.name) {\n      setState({ ...state,\n        [e.target.name]: e.target.value\n      });\n    } else {\n      setState({ ...state,\n        [name]: e.target.textContent\n      });\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    className: \"ui vertically divided grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sidebar\",\n        className: \"three wide column BigLogo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BigLogo-content\",\n          children: /*#__PURE__*/_jsxDEV(NavBar, {\n            user: user,\n            handleLogOut: handleLogOut\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"blue thirteen wide column LandingMessage\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: /*#__PURE__*/_jsxDEV(SearchForm, {\n            error: error,\n            handleSubmit: handleSubmit,\n            edit: true,\n            state: state,\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePage, \"oQ29E+P3DlNjuOWZb2N5aZcKBV0=\", false, function () {\n  return [useHistory];\n});\n\n_c = EditProfilePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePage\");","map":{"version":3,"sources":["C:/Users/Andrew/source/repos/OverStats/src/pages/EditProfilePage/EditProfilePage.jsx"],"names":["React","useState","userService","NavBar","SearchForm","useHistory","EditProfilePage","user","handleLogOut","handleSignUpOrLogin","error","setError","state","setState","battletag","platform","region","history","editProfile","data","edit","_id","console","log","push","err","handleSubmit","p","replace","makeApiCall","fetch","then","res","json","catch","handleChange","e","name","target","textContent","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport userService from '../../utils/userService';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport SearchForm from '../../components/SearchForm/SearchForm';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport default function EditProfilePage({ user, handleLogOut, handleSignUpOrLogin }) {\r\n    const [error, setError] = useState('')\r\n\r\n    //this updates with the users input\r\n    const [state, setState] = useState({\r\n        battletag: user.battletag,\r\n        platform: user.platform,\r\n        region: user.region\r\n\r\n    });\r\n\r\n    const history = useHistory();\r\n\r\n    async function editProfile() {\r\n        try {\r\n            const data = await userService.edit(state, user._id); /// sending over new user information\r\n            console.log(data, 'in editprofile after userService.edit')\r\n            handleSignUpOrLogin()\r\n            history.push('/profile')\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n    function handleSubmit() {\r\n        let p = state.battletag.replace('#', '-')\r\n        //checking to make sure the new user information is valid in the API otherwise send invalid to user\r\n        const makeApiCall = () => {\r\n            fetch(`https://ow-api.com/v1/stats/${state.platform}/${state.region}/${p}/complete`)\r\n                .then((res) => res.json())\r\n                .catch(function () {\r\n\r\n                })\r\n                .then((data) => {\r\n                    if (data.error) {\r\n                        setError('Invalid Entry')\r\n                    } else if (data) {\r\n                        console.log('did work')\r\n                        editProfile()\r\n\r\n                    } else {\r\n                        setError('Invalid Entry')\r\n                    }\r\n                });\r\n        };\r\n        makeApiCall();\r\n    }\r\n\r\n    //update state\r\n    function handleChange(e) {\r\n\r\n        ///getting the name key for state\r\n        let name;\r\n        if (e.target.textContent === 'PC' || e.target.textContent === 'XBL' || e.target.textContent === 'PSN') {\r\n            name = \"platform\"\r\n        }\r\n        if (e.target.textContent === 'US' || e.target.textContent === 'EU' || e.target.textContent === 'ASIA') {\r\n            name = \"region\"\r\n        }\r\n\r\n        if (e.target.name) {\r\n            setState({\r\n                ...state,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                [name]: e.target.textContent\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"main\" className=\"ui vertically divided grid\">\r\n            <div className=\"row\">\r\n                <div id=\"sidebar\" className=\"three wide column BigLogo\">\r\n                    <div className=\"BigLogo-content\">\r\n                        <NavBar user={user} handleLogOut={handleLogOut} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"blue thirteen wide column LandingMessage\">\r\n                    <div className=\"content\">\r\n                        <SearchForm error={error} handleSubmit={handleSubmit} edit={true} state={state} handleChange={handleChange} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}