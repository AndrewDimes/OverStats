{"ast":null,"code":"import tokenService from './tokenService';\nconst BASE_URL = '/api/users/';\nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(user)\n  }).then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(_ref => {\n    let {\n      token\n    } = _ref;\n    return tokenService.setToken(token);\n  });\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n}\n\nfunction deleteUser(user) {\n  console.log('in userservice');\n  return fetch(BASE_URL + user._id, {\n    method: 'DELETE',\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    if (res.ok) return res.json();\n    throw new Error('cant delete');\n  }).then(_ref2 => {\n    let {\n      token\n    } = _ref2;\n    return tokenService.removeToken(token);\n  });\n}\nfunction edit(body, userId) {\n  console.log(body, 'in userService.edit');\n  return fetch(BASE_URL + 'edit/' + userId, {\n    method: 'PUT',\n    body: JSON.stringify(body),\n    headers: {\n      'Authorization': 'Bearer ' + tokenService.getToken(),\n      'Content-Type': 'application/json'\n    }\n  }).then(res => {\n    if (res.ok) return res.json();\n    throw new Error('Can not edit');\n  }).then(_ref3 => {\n    let {\n      token\n    } = _ref3;\n    return tokenService.setToken(token);\n  });\n}\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\nfunction logout() {\n  tokenService.removeToken();\n}\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({\n      'Content-Type': 'application/json'\n    }),\n    body: JSON.stringify(creds)\n  }).then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  }).then(_ref4 => {\n    let {\n      token\n    } = _ref4;\n    return tokenService.setToken(token);\n  });\n}\nexport default {\n  signup,\n  logout,\n  login,\n  getUser,\n  edit,\n  deleteUser\n};","map":{"version":3,"names":["tokenService","BASE_URL","signup","user","fetch","method","headers","Headers","body","JSON","stringify","then","res","ok","json","Error","token","setToken","deleteUser","console","log","_id","getToken","removeToken","edit","userId","getUser","getUserFromToken","logout","login","creds"],"sources":["C:/Users/Andrew/source/repos/OverStats/src/utils/userService.js"],"sourcesContent":["import tokenService from './tokenService';\r\n\r\nconst BASE_URL = '/api/users/';\r\n\r\nfunction signup(user) {\r\n  return fetch(BASE_URL + 'signup', {\r\n    method: 'POST',\r\n    headers: new Headers({ 'Content-Type': 'application/json' }),\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(res => {\r\n      if (res.ok) return res.json();\r\n      // Probably a duplicate email\r\n      throw new Error('Email already taken!');\r\n    })\r\n    // Parameter destructuring!\r\n    .then(({ token }) => tokenService.setToken(token));\r\n  // Setting our token in localStorage in our browser\r\n  // then we'll be able to use with every request!\r\n  \r\n}\r\n\r\nfunction deleteUser(user) {\r\n  console.log('in userservice')\r\n  return fetch(BASE_URL + user._id, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': 'Bearer ' + tokenService.getToken(),\r\n      'Content-Type': 'application/json'\r\n    }\r\n\r\n  })\r\n    .then(res => {\r\n      if (res.ok) return res.json();\r\n      throw new Error('cant delete')\r\n    })\r\n    .then(({ token }) => tokenService.removeToken(token));\r\n\r\n}\r\nfunction edit(body, userId) {\r\n  console.log(body, 'in userService.edit')\r\n  return fetch(BASE_URL + 'edit/' + userId, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Authorization': 'Bearer ' + tokenService.getToken(),\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (res.ok) return res.json();\r\n      throw new Error('Can not edit')\r\n    })\r\n    .then(({ token }) => tokenService.setToken(token));\r\n\r\n}\r\n\r\nfunction getUser() {\r\n  return tokenService.getUserFromToken();\r\n}\r\n\r\nfunction logout() {\r\n  tokenService.removeToken();\r\n}\r\n\r\nfunction login(creds) {\r\n  return fetch(BASE_URL + 'login', {\r\n    method: 'POST',\r\n    headers: new Headers({ 'Content-Type': 'application/json' }),\r\n    body: JSON.stringify(creds)\r\n  })\r\n    .then(res => {\r\n      // Valid login if we have a status of 2xx (res.ok)\r\n      if (res.ok) return res.json();\r\n      throw new Error('Bad Credentials!');\r\n    })\r\n    .then(({ token }) => tokenService.setToken(token));\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n  signup,\r\n  logout,\r\n  login,\r\n  getUser,\r\n  edit,\r\n  deleteUser\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}