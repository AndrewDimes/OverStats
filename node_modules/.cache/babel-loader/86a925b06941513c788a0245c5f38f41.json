{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\source\\\\repos\\\\OverStats\\\\src\\\\components\\\\HeroTimeGraph\\\\HeroTimeGraph.jsx\";\nimport React from 'react';\nimport CanvasJSReact from '../../canvasjs.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport default function HeroTimeGraph({\n  winRatio,\n  profileData,\n  stats\n}) {\n  //Check if the API sent back this info if not set to 0\n  let fireTime = stats.average;\n  let fireTimeString;\n  let fireTimeFinal;\n  fireTime.timeSpentOnFireAvgPer10Min ? fireTimeString = fireTime.timeSpentOnFireAvgPer10Min.toString().replace(':', '.') : fireTimeFinal = 0;\n\n  if (fireTimeFinal !== 0) {\n    fireTimeFinal = parseFloat(fireTimeString);\n  }\n\n  let objTimeString;\n  let objTimeFinal;\n  fireTime.objectiveTimeAvgPer10Min ? objTimeString = fireTime.objectiveTimeAvgPer10Min.toString().replace(':', '.') : objTimeFinal = 0;\n\n  if (objTimeFinal !== 0) {\n    objTimeFinal = parseFloat(objTimeString);\n  } ///////////////////////////////////\n\n\n  const options = {\n    backgroundColor: \"rgb(0,133,208)\",\n    title: {\n      text: `On Fire/Obj Time per 10mins`\n    },\n    data: [{\n      type: \"column\",\n      dataPoints: [{\n        label: \"On Fire\",\n        y: fireTimeFinal,\n        color: \"rgb(100,248,40)\"\n      }, {\n        label: \"Objective Time\",\n        y: objTimeFinal,\n        color: \"yellow\"\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c = HeroTimeGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeroTimeGraph\");","map":{"version":3,"sources":["C:/Users/Andrew/source/repos/OverStats/src/components/HeroTimeGraph/HeroTimeGraph.jsx"],"names":["React","CanvasJSReact","CanvasJS","CanvasJSChart","HeroTimeGraph","winRatio","profileData","stats","fireTime","average","fireTimeString","fireTimeFinal","timeSpentOnFireAvgPer10Min","toString","replace","parseFloat","objTimeString","objTimeFinal","objectiveTimeAvgPer10Min","options","backgroundColor","title","text","data","type","dataPoints","label","y","color"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;AAGA,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAA7B;AACA,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAlC;AAGA,eAAe,SAASC,aAAT,CAAuB;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,CAAvB,EAAyD;AACpE;AACA,MAAIC,QAAQ,GAAGD,KAAK,CAACE,OAArB;AACA,MAAIC,cAAJ;AACA,MAAIC,aAAJ;AACAH,EAAAA,QAAQ,CAACI,0BAAT,GAAsCF,cAAc,GAAGF,QAAQ,CAACI,0BAAT,CAAoCC,QAApC,GAA+CC,OAA/C,CAAuD,GAAvD,EAA4D,GAA5D,CAAvD,GAA0HH,aAAa,GAAG,CAA1I;;AAEA,MAAIA,aAAa,KAAK,CAAtB,EAAyB;AACrBA,IAAAA,aAAa,GAAGI,UAAU,CAACL,cAAD,CAA1B;AACH;;AAED,MAAIM,aAAJ;AACA,MAAIC,YAAJ;AACAT,EAAAA,QAAQ,CAACU,wBAAT,GAAoCF,aAAa,GAAGR,QAAQ,CAACU,wBAAT,CAAkCL,QAAlC,GAA6CC,OAA7C,CAAqD,GAArD,EAA0D,GAA1D,CAApD,GAAqHG,YAAY,GAAG,CAApI;;AAEA,MAAIA,YAAY,KAAK,CAArB,EAAwB;AACpBA,IAAAA,YAAY,GAAGF,UAAU,CAACC,aAAD,CAAzB;AACH,GAjBmE,CAkBpE;;;AAKA,QAAMG,OAAO,GAAG;AACZC,IAAAA,eAAe,EAAE,gBADL;AAEZC,IAAAA,KAAK,EAAE;AACHC,MAAAA,IAAI,EAAG;AADJ,KAFK;AAKZC,IAAAA,IAAI,EAAE,CACF;AACIC,MAAAA,IAAI,EAAE,QADV;AAEIC,MAAAA,UAAU,EAAE,CAER;AAAEC,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,CAAC,EAAEhB,aAAvB;AAAsCiB,QAAAA,KAAK,EAAE;AAA7C,OAFQ,EAGR;AAAEF,QAAAA,KAAK,EAAE,gBAAT;AAA2BC,QAAAA,CAAC,EAAEV,YAA9B;AAA4CW,QAAAA,KAAK,EAAE;AAAnD,OAHQ;AAFhB,KADE;AALM,GAAhB;AAiBA,sBACI;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,OAAO,EAAET;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;KA7CuBf,a","sourcesContent":["import React from 'react';\r\nimport CanvasJSReact from '../../canvasjs.react'\r\n\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n\r\nexport default function HeroTimeGraph({ winRatio, profileData, stats }) {\r\n    //Check if the API sent back this info if not set to 0\r\n    let fireTime = stats.average\r\n    let fireTimeString;\r\n    let fireTimeFinal\r\n    fireTime.timeSpentOnFireAvgPer10Min ? fireTimeString = fireTime.timeSpentOnFireAvgPer10Min.toString().replace(':', '.') : fireTimeFinal = 0\r\n\r\n    if (fireTimeFinal !== 0) {\r\n        fireTimeFinal = parseFloat(fireTimeString)\r\n    }\r\n\r\n    let objTimeString;\r\n    let objTimeFinal\r\n    fireTime.objectiveTimeAvgPer10Min ? objTimeString = fireTime.objectiveTimeAvgPer10Min.toString().replace(':', '.') : objTimeFinal = 0\r\n\r\n    if (objTimeFinal !== 0) {\r\n        objTimeFinal = parseFloat(objTimeString)\r\n    }\r\n    ///////////////////////////////////\r\n\r\n\r\n\r\n\r\n    const options = {\r\n        backgroundColor: \"rgb(0,133,208)\",\r\n        title: {\r\n            text: `On Fire/Obj Time per 10mins`\r\n        },\r\n        data: [\r\n            {\r\n                type: \"column\",\r\n                dataPoints: [\r\n\r\n                    { label: \"On Fire\", y: fireTimeFinal, color: \"rgb(100,248,40)\" },\r\n                    { label: \"Objective Time\", y: objTimeFinal, color: \"yellow\" },\r\n\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <CanvasJSChart options={options} />\r\n        </div>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}