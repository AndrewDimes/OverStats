{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\source\\\\repos\\\\OverStats\\\\src\\\\components\\\\HeroTimeGraph\\\\HeroTimeGraph.jsx\";\nimport React from 'react';\nimport CanvasJSReact from '../../canvasjs.react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\nexport default function HeroTimeGraph(_ref) {\n  let {\n    winRatio,\n    profileData,\n    stats\n  } = _ref;\n  //Check if the API sent back this info if not set to 0\n  let fireTime = stats.average;\n  let fireTimeString;\n  let fireTimeFinal;\n  fireTime.timeSpentOnFireAvgPer10Min ? fireTimeString = fireTime.timeSpentOnFireAvgPer10Min.toString().replace(':', '.') : fireTimeFinal = 0;\n  if (fireTimeFinal !== 0) {\n    fireTimeFinal = parseFloat(fireTimeString);\n  }\n  let objTimeString;\n  let objTimeFinal;\n  fireTime.objectiveTimeAvgPer10Min ? objTimeString = fireTime.objectiveTimeAvgPer10Min.toString().replace(':', '.') : objTimeFinal = 0;\n  if (objTimeFinal !== 0) {\n    objTimeFinal = parseFloat(objTimeString);\n  }\n  ///////////////////////////////////\n\n  const options = {\n    backgroundColor: \"rgb(0,133,208)\",\n    title: {\n      text: `On Fire/Obj Time per 10mins`\n    },\n    data: [{\n      type: \"column\",\n      dataPoints: [{\n        label: \"On Fire\",\n        y: fireTimeFinal,\n        color: \"rgb(100,248,40)\"\n      }, {\n        label: \"Objective Time\",\n        y: objTimeFinal,\n        color: \"yellow\"\n      }]\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CanvasJSChart, {\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_c = HeroTimeGraph;\nvar _c;\n$RefreshReg$(_c, \"HeroTimeGraph\");","map":{"version":3,"names":["React","CanvasJSReact","CanvasJS","CanvasJSChart","HeroTimeGraph","winRatio","profileData","stats","fireTime","average","fireTimeString","fireTimeFinal","timeSpentOnFireAvgPer10Min","toString","replace","parseFloat","objTimeString","objTimeFinal","objectiveTimeAvgPer10Min","options","backgroundColor","title","text","data","type","dataPoints","label","y","color"],"sources":["C:/Users/Andrew/source/repos/OverStats/src/components/HeroTimeGraph/HeroTimeGraph.jsx"],"sourcesContent":["import React from 'react';\r\nimport CanvasJSReact from '../../canvasjs.react'\r\n\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n\r\nexport default function HeroTimeGraph({ winRatio, profileData, stats }) {\r\n    //Check if the API sent back this info if not set to 0\r\n    let fireTime = stats.average\r\n    let fireTimeString;\r\n    let fireTimeFinal\r\n    fireTime.timeSpentOnFireAvgPer10Min ? fireTimeString = fireTime.timeSpentOnFireAvgPer10Min.toString().replace(':', '.') : fireTimeFinal = 0\r\n\r\n    if (fireTimeFinal !== 0) {\r\n        fireTimeFinal = parseFloat(fireTimeString)\r\n    }\r\n\r\n    let objTimeString;\r\n    let objTimeFinal\r\n    fireTime.objectiveTimeAvgPer10Min ? objTimeString = fireTime.objectiveTimeAvgPer10Min.toString().replace(':', '.') : objTimeFinal = 0\r\n\r\n    if (objTimeFinal !== 0) {\r\n        objTimeFinal = parseFloat(objTimeString)\r\n    }\r\n    ///////////////////////////////////\r\n\r\n\r\n\r\n\r\n    const options = {\r\n        backgroundColor: \"rgb(0,133,208)\",\r\n        title: {\r\n            text: `On Fire/Obj Time per 10mins`\r\n        },\r\n        data: [\r\n            {\r\n                type: \"column\",\r\n                dataPoints: [\r\n\r\n                    { label: \"On Fire\", y: fireTimeFinal, color: \"rgb(100,248,40)\" },\r\n                    { label: \"Objective Time\", y: objTimeFinal, color: \"yellow\" },\r\n\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <CanvasJSChart options={options} />\r\n        </div>\r\n    );\r\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,sBAAsB;AAAA;AAGhD,IAAIC,QAAQ,GAAGD,aAAa,CAACC,QAAQ;AACrC,IAAIC,aAAa,GAAGF,aAAa,CAACE,aAAa;AAG/C,eAAe,SAASC,aAAa,OAAmC;EAAA,IAAlC;IAAEC,QAAQ;IAAEC,WAAW;IAAEC;EAAM,CAAC;EAClE;EACA,IAAIC,QAAQ,GAAGD,KAAK,CAACE,OAAO;EAC5B,IAAIC,cAAc;EAClB,IAAIC,aAAa;EACjBH,QAAQ,CAACI,0BAA0B,GAAGF,cAAc,GAAGF,QAAQ,CAACI,0BAA0B,CAACC,QAAQ,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAGH,aAAa,GAAG,CAAC;EAE3I,IAAIA,aAAa,KAAK,CAAC,EAAE;IACrBA,aAAa,GAAGI,UAAU,CAACL,cAAc,CAAC;EAC9C;EAEA,IAAIM,aAAa;EACjB,IAAIC,YAAY;EAChBT,QAAQ,CAACU,wBAAwB,GAAGF,aAAa,GAAGR,QAAQ,CAACU,wBAAwB,CAACL,QAAQ,EAAE,CAACC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,GAAGG,YAAY,GAAG,CAAC;EAErI,IAAIA,YAAY,KAAK,CAAC,EAAE;IACpBA,YAAY,GAAGF,UAAU,CAACC,aAAa,CAAC;EAC5C;EACA;;EAKA,MAAMG,OAAO,GAAG;IACZC,eAAe,EAAE,gBAAgB;IACjCC,KAAK,EAAE;MACHC,IAAI,EAAG;IACX,CAAC;IACDC,IAAI,EAAE,CACF;MACIC,IAAI,EAAE,QAAQ;MACdC,UAAU,EAAE,CAER;QAAEC,KAAK,EAAE,SAAS;QAAEC,CAAC,EAAEhB,aAAa;QAAEiB,KAAK,EAAE;MAAkB,CAAC,EAChE;QAAEF,KAAK,EAAE,gBAAgB;QAAEC,CAAC,EAAEV,YAAY;QAAEW,KAAK,EAAE;MAAS,CAAC;IAGrE,CAAC;EAET,CAAC;EACD,oBACI;IAAA,uBACI,QAAC,aAAa;MAAC,OAAO,EAAET;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACjC;AAEd;AAAC,KA7CuBf,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module"}