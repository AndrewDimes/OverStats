{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Andrew\\\\source\\\\repos\\\\OverStats\\\\src\\\\pages\\\\SignupPage\\\\SignupPage.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Form, Message } from 'semantic-ui-react';\nimport userService from '../../utils/userService';\nimport { useHistory, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignUpPage(props) {\n  _s();\n\n  const [invalidForm, setValidForm] = useState(false);\n  const [error, setError] = useState('');\n  const [state, setState] = useState({\n    username: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n    battletag: '',\n    platform: '',\n    region: ''\n  });\n  const history = useHistory();\n\n  function handleChange(e) {\n    ///getting key values for dropdown\n    let name;\n\n    if (e.target.textContent === 'PC' || e.target.textContent === 'XBL' || e.target.textContent === 'PSN') {\n      name = \"platform\";\n    }\n\n    if (e.target.textContent === 'US' || e.target.textContent === 'EU' || e.target.textContent === 'ASIA') {\n      name = \"region\";\n    }\n\n    if (e.target.name) {\n      setState({ ...state,\n        [e.target.name]: e.target.value\n      });\n    } else {\n      setState({ ...state,\n        [name]: e.target.textContent\n      });\n    }\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      // refere to the utils/userService, to look at the signup fetch function\n      await userService.signup(state); // setTheUser in our app\n\n      props.handleSignUpOrLogin(); // gets the token from localstorage and updates the user state in our app.js\n      // with the correct user object from the current token\n      // then route to the homepage\n\n      history.push('/profile'); // defined above from react-router-dom\n      // after this we can go whereever\n    } catch (err) {\n      console.log(err.message);\n      setError(err.message);\n    }\n  }\n\n  const options = [{\n    key: 'pc',\n    text: 'PC',\n    value: 'pc'\n  }, {\n    key: 'xbl',\n    text: 'XBL',\n    value: 'xbl'\n  }, {\n    key: 'psn',\n    text: 'PSN',\n    value: 'psn'\n  }];\n  const optionsTwo = [{\n    text: 'US',\n    value: 'us'\n  }, {\n    text: 'EU',\n    value: 'eu'\n  }, {\n    text: 'ASIA',\n    value: 'asia'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"main\",\n    className: \"ui vertically divided grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"signup-left\",\n        className: \"blue eight wide column BigLogo\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"BigLogo-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"ow\",\n            src: \"../../retry.png\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 73\n          }, this), \"                    \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"sidebar\",\n        className: \" eight wide column LandingMessage\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"right-items\",\n          className: \"content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"signup-title\",\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            className: \"signup-form\",\n            autoComplete: \"off\",\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"username\",\n              placeholder: \"username\",\n              value: state.username,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"email\",\n              value: state.email,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"battletag\",\n              placeholder: \"battletag\",\n              value: state.battletag,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              fluid: true,\n              name: \"platform\",\n              options: options,\n              onChange: handleChange,\n              placeholder: \"Platform\"\n            }, \"platform\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n              fluid: true,\n              name: \"region\",\n              options: optionsTwo,\n              onChange: handleChange,\n              placeholder: \"Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"password\",\n              type: \"password\",\n              placeholder: \"password\",\n              value: state.password,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n              name: \"passwordConf\",\n              type: \"password\",\n              placeholder: \"Confirm Password\",\n              value: state.passwordConf,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"blue\",\n              type: \"submit\",\n              className: \"btn\",\n              disabled: invalidForm,\n              children: \"Signup\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Message, {\n              children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/login\",\n                children: \"Log In\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 58\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), error ? /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              error: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 38\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignUpPage, \"Dw6b21r58+akyg+/JUfoDpYLeT0=\", false, function () {\n  return [useHistory];\n});\n\n_c = SignUpPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpPage\");","map":{"version":3,"sources":["C:/Users/Andrew/source/repos/OverStats/src/pages/SignupPage/SignupPage.jsx"],"names":["React","useState","ErrorMessage","Button","Form","Message","userService","useHistory","Link","SignUpPage","props","invalidForm","setValidForm","error","setError","state","setState","username","email","password","passwordConf","battletag","platform","region","history","handleChange","e","name","target","textContent","value","handleSubmit","preventDefault","signup","handleSignUpOrLogin","push","err","console","log","message","options","key","text","optionsTwo"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport userService from '../../utils/userService';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\n\r\nexport default function SignUpPage(props) {\r\n    const [invalidForm, setValidForm] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [state, setState] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConf: '',\r\n        battletag: '',\r\n        platform: '',\r\n        region: ''\r\n    });\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    function handleChange(e) {\r\n\r\n        ///getting key values for dropdown\r\n        let name;\r\n        if (e.target.textContent === 'PC' || e.target.textContent === 'XBL' || e.target.textContent === 'PSN') {\r\n            name = \"platform\"\r\n        }\r\n        if (e.target.textContent === 'US' || e.target.textContent === 'EU' || e.target.textContent === 'ASIA') {\r\n            name = \"region\"\r\n        }\r\n\r\n        if (e.target.name) {\r\n            setState({\r\n                ...state,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                [name]: e.target.textContent\r\n            })\r\n        }\r\n\r\n    }\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            // refere to the utils/userService, to look at the signup fetch function\r\n            await userService.signup(state);\r\n            // setTheUser in our app\r\n            props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\r\n            // with the correct user object from the current token\r\n            // then route to the homepage\r\n            history.push('/profile') // defined above from react-router-dom\r\n            // after this we can go whereever\r\n\r\n        } catch (err) {\r\n            console.log(err.message)\r\n            setError(err.message)\r\n        }\r\n\r\n    }\r\n    const options = [\r\n        { key: 'pc', text: 'PC', value: 'pc' },\r\n        { key: 'xbl', text: 'XBL', value: 'xbl' },\r\n        { key: 'psn', text: 'PSN', value: 'psn' },\r\n    ]\r\n    const optionsTwo = [\r\n        { text: 'US', value: 'us' },\r\n        { text: 'EU', value: 'eu' },\r\n        { text: 'ASIA', value: 'asia' },\r\n    ]\r\n\r\n    return (\r\n        <div id=\"main\" className=\"ui vertically divided grid\">\r\n            <div className=\"row\">\r\n                <div id=\"signup-left\" className=\"blue eight wide column BigLogo\">\r\n                    <div className=\"BigLogo-content\">\r\n                        <img className=\"ow\" src=\"../../retry.png\"></img><br></br>                    </div>\r\n\r\n                </div>\r\n                <div id=\"sidebar\" className=\" eight wide column LandingMessage\">\r\n                    <div id=\"right-items\" className=\"content\">\r\n                        <h1 className=\"signup-title\">Sign Up</h1>\r\n\r\n                        <Form className=\"signup-form\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n                            <Form.Input\r\n                                name=\"username\"\r\n                                placeholder=\"username\"\r\n                                value={state.username}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"email\"\r\n                                value={state.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                name=\"battletag\"\r\n                                placeholder=\"battletag\"\r\n                                value={state.battletag}\r\n                                onChange={handleChange}\r\n                                \r\n                            />\r\n                            <Form.Select\r\n                                fluid\r\n                                key=\"platform\"\r\n                                name=\"platform\"\r\n                                options={options}\r\n                                onChange={handleChange}\r\n                                placeholder='Platform'\r\n                            />\r\n                            <Form.Select\r\n                                fluid\r\n                                name=\"region\"\r\n                                options={optionsTwo}\r\n                                onChange={handleChange}\r\n                                placeholder='Region'\r\n                            />\r\n                            <Form.Input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"password\"\r\n                                value={state.password}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                name=\"passwordConf\"\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={state.passwordConf}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Button\r\n                                color='blue'\r\n\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                                disabled={invalidForm}\r\n                            >\r\n                                Signup\r\n                      </Button>\r\n\r\n                            <Message>\r\n                                Already have an account? <Link to='/login'>Log In</Link>\r\n                            </Message>\r\n                            {error ? <ErrorMessage error={error} /> : null}\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}