[{"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\index.js":"1","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\serviceWorker.js":"2","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\App\\App.jsx":"3","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\utils\\userService.js":"4","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\SignupPage\\SignupPage.jsx":"5","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\LoginPage\\LoginPage.jsx":"6","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\HomePage\\HomePage.jsx":"7","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\EditProfilePage\\EditProfilePage.jsx":"8","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\ProfilePage\\ProfilePage.jsx":"9","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\SearchPage\\SearchPage.jsx":"10","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\DeletePage\\DeletePage.jsx":"11","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\utils\\tokenService.js":"12","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\ErrorMessage\\ErrorMessage.jsx":"13","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\ProfileInfo\\ProfileInfo.jsx":"14","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\NavBar\\NavBar.jsx":"15","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\SearchForm\\SearchForm.jsx":"16","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\Graph\\Graph.jsx":"17","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\BarChart\\BarChart.jsx":"18","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\HeroTimeGraph\\HeroTimeGraph.jsx":"19","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\DamageGraph\\DamageGraph.jsx":"20","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\HeroElimsGraph\\HeroElimsGraph.jsx":"21","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\canvasjs.react.js":"22","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\canvasjs.min.js":"23","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\Popup\\Popup.jsx":"24","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\MobileNavBar\\MobileNavBar.jsx":"25"},{"size":602,"mtime":1670440462617,"results":"26","hashOfConfig":"27"},{"size":5227,"mtime":1670440462628,"results":"28","hashOfConfig":"27"},{"size":2386,"mtime":1670440462619,"results":"29","hashOfConfig":"27"},{"size":2171,"mtime":1670440462630,"results":"30","hashOfConfig":"27"},{"size":9939,"mtime":1671031134737,"results":"31","hashOfConfig":"27"},{"size":5477,"mtime":1671031015021,"results":"32","hashOfConfig":"27"},{"size":2265,"mtime":1671031152250,"results":"33","hashOfConfig":"27"},{"size":3738,"mtime":1670782767112,"results":"34","hashOfConfig":"27"},{"size":3618,"mtime":1671032769682,"results":"35","hashOfConfig":"27"},{"size":4375,"mtime":1671033842674,"results":"36","hashOfConfig":"27"},{"size":1955,"mtime":1670440462620,"results":"37","hashOfConfig":"27"},{"size":939,"mtime":1670440462629,"results":"38","hashOfConfig":"27"},{"size":134,"mtime":1670440462609,"results":"39","hashOfConfig":"27"},{"size":10679,"mtime":1670440462615,"results":"40","hashOfConfig":"27"},{"size":1846,"mtime":1670440462613,"results":"41","hashOfConfig":"27"},{"size":2356,"mtime":1670440462615,"results":"42","hashOfConfig":"27"},{"size":1092,"mtime":1670440462611,"results":"43","hashOfConfig":"27"},{"size":1879,"mtime":1670440462608,"results":"44","hashOfConfig":"27"},{"size":1529,"mtime":1670440462612,"results":"45","hashOfConfig":"27"},{"size":1092,"mtime":1670440462609,"results":"46","hashOfConfig":"27"},{"size":959,"mtime":1670440462611,"results":"47","hashOfConfig":"27"},{"size":2080,"mtime":1670440462606,"results":"48","hashOfConfig":"27"},{"size":482000,"mtime":1670440462606,"results":"49","hashOfConfig":"27"},{"size":1043,"mtime":1670785589350,"results":"50","hashOfConfig":"27"},{"size":1639,"mtime":1671033108161,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"2iwl3x",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"112","usedDeprecatedRules":"54"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"54"},"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\index.js",[],["120","121"],"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\serviceWorker.js",[],"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\App\\App.jsx",["122","123"],"import React, { useState } from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport SignupPage from '../SignupPage/SignupPage';\r\nimport LoginPage from '../LoginPage/LoginPage';\r\nimport HomePage from '../HomePage/HomePage';\r\nimport ProfilePage from '../ProfilePage/ProfilePage';\r\nimport EditProfilePage from '../EditProfilePage/EditProfilePage';\r\nimport SearchPage from '../SearchPage/SearchPage';\r\nimport DeletePage from '../DeletePage/DeletePage';\r\nimport userService from '../../utils/userService'\r\n\r\n\r\n\r\nfunction App() {\r\n  const [user, setUser] = useState(userService.getUser()) // getUser decodes the JWT token, into a javascript object\r\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like \r\n  // this  const token = createJWT(user); // where user was the document we created from mongo\r\n  const [error, setError] = useState('')\r\n\r\n  function handleSignUpOrLogin() {\r\n    setUser(userService.getUser()) // getting the user from localstorage decoding the jwt\r\n  }\r\n\r\n  function handleLogOut() {\r\n    userService.logout();\r\n    setUser({ user: null })\r\n  }\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          <LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />\r\n        </Route>\r\n        <Route exact path=\"/signup\">\r\n          <SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <HomePage />\r\n        </Route>\r\n\r\n        {userService.getUser() ?\r\n          <Switch>\r\n            <Route exact path='/profile'>\r\n              <ProfilePage user={user} handleLogOut={handleLogOut} />\r\n            </Route>\r\n            <Route exact path=\"/search\">\r\n              <SearchPage user={user} handleLogOut={handleLogOut} />\r\n            </Route>\r\n            <Route exact path=\"/edit\">\r\n              <EditProfilePage handleSignUpOrLogin={handleSignUpOrLogin} user={user} handleLogOut={handleLogOut} />\r\n            </Route>\r\n            <Route exact path=\"/delete\">\r\n              <DeletePage handleSignUpOrLogin={handleSignUpOrLogin} user={user} handleLogOut={handleLogOut} />\r\n            </Route>\r\n          </Switch>\r\n          :\r\n          <Redirect to='/login' />\r\n        }\r\n\r\n\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\utils\\userService.js",["124"],"import tokenService from './tokenService';\r\n\r\nconst BASE_URL = '/api/users/';\r\n\r\nfunction signup(user) {\r\n  return fetch(BASE_URL + 'signup', {\r\n    method: 'POST',\r\n    headers: new Headers({ 'Content-Type': 'application/json' }),\r\n    body: JSON.stringify(user)\r\n  })\r\n    .then(res => {\r\n      if (res.ok) return res.json();\r\n      // Probably a duplicate email\r\n      throw new Error('Email already taken!');\r\n    })\r\n    // Parameter destructuring!\r\n    .then(({ token }) => tokenService.setToken(token));\r\n  // Setting our token in localStorage in our browser\r\n  // then we'll be able to use with every request!\r\n  \r\n}\r\n\r\nfunction deleteUser(user) {\r\n  console.log('in userservice')\r\n  return fetch(BASE_URL + user._id, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Authorization': 'Bearer ' + tokenService.getToken(),\r\n      'Content-Type': 'application/json'\r\n    }\r\n\r\n  })\r\n    .then(res => {\r\n      if (res.ok) return res.json();\r\n      throw new Error('cant delete')\r\n    })\r\n    .then(({ token }) => tokenService.removeToken(token));\r\n\r\n}\r\nfunction edit(body, userId) {\r\n  console.log(body, 'in userService.edit')\r\n  return fetch(BASE_URL + 'edit/' + userId, {\r\n    method: 'PUT',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      'Authorization': 'Bearer ' + tokenService.getToken(),\r\n      'Content-Type': 'application/json'\r\n    }\r\n  })\r\n    .then(res => {\r\n      if (res.ok) return res.json();\r\n      throw new Error('Can not edit')\r\n    })\r\n    .then(({ token }) => tokenService.setToken(token));\r\n\r\n}\r\n\r\nfunction getUser() {\r\n  return tokenService.getUserFromToken();\r\n}\r\n\r\nfunction logout() {\r\n  tokenService.removeToken();\r\n}\r\n\r\nfunction login(creds) {\r\n  return fetch(BASE_URL + 'login', {\r\n    method: 'POST',\r\n    headers: new Headers({ 'Content-Type': 'application/json' }),\r\n    body: JSON.stringify(creds)\r\n  })\r\n    .then(res => {\r\n      // Valid login if we have a status of 2xx (res.ok)\r\n      if (res.ok) return res.json();\r\n      throw new Error('Bad Credentials!');\r\n    })\r\n    .then(({ token }) => tokenService.setToken(token));\r\n}\r\n\r\n\r\n\r\n\r\nexport default {\r\n  signup,\r\n  logout,\r\n  login,\r\n  getUser,\r\n  edit,\r\n  deleteUser\r\n};","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\SignupPage\\SignupPage.jsx",["125","126"],"import React, { useState } from 'react';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport userService from '../../utils/userService';\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\n\r\nexport default function SignUpPage(props) {\r\n    const [invalidForm, setValidForm] = useState(false)\r\n    const [error, setError] = useState('')\r\n    const [state, setState] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        passwordConf: '',\r\n        battletag: '',\r\n        platform: '',\r\n        region: ''\r\n    });\r\n\r\n    const history = useHistory()\r\n\r\n\r\n    function handleChange(e) {\r\n\r\n        ///getting key values for dropdown\r\n        let name;\r\n        if (e.target.textContent === 'PC' || e.target.textContent === 'XBL' || e.target.textContent === 'PSN') {\r\n            name = \"platform\"\r\n        }\r\n        if (e.target.textContent === 'US' || e.target.textContent === 'EU' || e.target.textContent === 'ASIA') {\r\n            name = \"region\"\r\n        }\r\n\r\n        if (e.target.name) {\r\n            setState({\r\n                ...state,\r\n                [e.target.name]: e.target.value\r\n            })\r\n        } else {\r\n            setState({\r\n                ...state,\r\n                [name]: e.target.textContent\r\n            })\r\n        }\r\n\r\n    }\r\n    async function handleSubmit(e) {\r\n        e.preventDefault();\r\n        try {\r\n            // refere to the utils/userService, to look at the signup fetch function\r\n            await userService.signup(state);\r\n            // setTheUser in our app\r\n            props.handleSignUpOrLogin() // gets the token from localstorage and updates the user state in our app.js\r\n            // with the correct user object from the current token\r\n            // then route to the homepage\r\n            history.push('/profile') // defined above from react-router-dom\r\n            // after this we can go whereever\r\n\r\n        } catch (err) {\r\n            console.log(err.message)\r\n            setError(err.message)\r\n        }\r\n\r\n    }\r\n    const options = [\r\n        { key: 'pc', text: 'PC', value: 'pc' },\r\n        { key: 'xbl', text: 'XBL', value: 'xbl' },\r\n        { key: 'psn', text: 'PSN', value: 'psn' },\r\n    ]\r\n    const optionsTwo = [\r\n        { text: 'US', value: 'us' },\r\n        { text: 'EU', value: 'eu' },\r\n        { text: 'ASIA', value: 'asia' },\r\n    ]\r\n\r\n    return (\r\n        <div id=\"main\" className=\"ui vertically divided grid\">\r\n            <div id='non-mobile-tablet' className=\"row\">\r\n                <div id=\"signup-left\" className=\"blue eight wide column BigLogo\">\r\n                    <div className=\"BigLogo-content\">\r\n                        <img className=\"ow\" src=\"../../retry.png\"></img><br></br>                    </div>\r\n\r\n                </div>\r\n                <div id=\"sidebar\" className=\" eight wide column LandingMessage\">\r\n                    <div id=\"right-items\" className=\"content\">\r\n                        <h1 className=\"signup-title\">Sign Up</h1>\r\n\r\n                        <Form className=\"signup-form\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n                            <Form.Input\r\n                                name=\"username\"\r\n                                placeholder=\"username\"\r\n                                value={state.username}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"email\"\r\n                                value={state.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                name=\"battletag\"\r\n                                placeholder=\"battletag\"\r\n                                value={state.battletag}\r\n                                onChange={handleChange}\r\n\r\n                            />\r\n                            <Form.Select\r\n                                fluid\r\n                                key=\"platform\"\r\n                                name=\"platform\"\r\n                                options={options}\r\n                                onChange={handleChange}\r\n                                placeholder='Platform'\r\n                            />\r\n                            <Form.Select\r\n                                fluid\r\n                                name=\"region\"\r\n                                options={optionsTwo}\r\n                                onChange={handleChange}\r\n                                placeholder='Region'\r\n                            />\r\n                            <Form.Input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"password\"\r\n                                value={state.password}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                name=\"passwordConf\"\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={state.passwordConf}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Button\r\n                                color='blue'\r\n\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                                disabled={invalidForm}\r\n                            >\r\n                                Signup\r\n                            </Button>\r\n\r\n                            <Message>\r\n                                Already have an account? <Link to='/login'>Log In</Link>\r\n                            </Message>\r\n                            {error ? <ErrorMessage error={error} /> : null}\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id='mobile-tablet' className=\"row\">\r\n                <div id=\"sidebar\" className=\" sixteen wide column LandingMessage\">\r\n                    <div id=\"right-items\" className=\"mobile-content\">\r\n                        <h1 className=\"signup-title\">Sign Up</h1>\r\n\r\n                        <Form className=\"signup-form\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n                            <Form.Input\r\n                                name=\"username\"\r\n                                placeholder=\"username\"\r\n                                value={state.username}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"email\"\r\n                                value={state.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                name=\"battletag\"\r\n                                placeholder=\"battletag\"\r\n                                value={state.battletag}\r\n                                onChange={handleChange}\r\n\r\n                            />\r\n                            <Form.Select\r\n                                fluid\r\n                                key=\"platform\"\r\n                                name=\"platform\"\r\n                                options={options}\r\n                                onChange={handleChange}\r\n                                placeholder='Platform'\r\n                            />\r\n                            <Form.Select\r\n                                fluid\r\n                                name=\"region\"\r\n                                options={optionsTwo}\r\n                                onChange={handleChange}\r\n                                placeholder='Region'\r\n                            />\r\n                            <Form.Input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"password\"\r\n                                value={state.password}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                name=\"passwordConf\"\r\n                                type=\"password\"\r\n                                placeholder=\"Confirm Password\"\r\n                                value={state.passwordConf}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Button\r\n                                color='blue'\r\n\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                                disabled={invalidForm}\r\n                            >\r\n                                Signup\r\n                            </Button>\r\n\r\n                            <Message>\r\n                                Already have an account? <Link to='/login'>Log In</Link>\r\n                            </Message>\r\n                            {error ? <ErrorMessage error={error} /> : null}\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\LoginPage\\LoginPage.jsx",["127","128"],"import React, { useState } from 'react';\r\nimport './LoginPage.css';\r\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\r\nimport userService from '../../utils/userService';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\n\r\n\r\nexport default function LoginPage(props) {\r\n    const [invalidForm, setValidForm] = useState(false);\r\n    const [error, setError] = useState('')\r\n    const [state, setState] = useState({\r\n        email: '',\r\n        password: '',\r\n    })\r\n\r\n    const history = useHistory();\r\n\r\n    function handleChange(e) {\r\n        setState({\r\n            ...state,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n\r\n\r\n    async function handleSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            await userService.login(state);\r\n            props.handleSignUpOrLogin()\r\n            history.push('/profile')\r\n\r\n        } catch (err) {\r\n            // Invalid user data (probably duplicate email)\r\n            setError(err.message)\r\n        }\r\n    }\r\n    return (\r\n        <div id=\"main\" className=\"ui vertically divided grid\">\r\n            <div id='non-mobile-tablet' className=\"row\">\r\n                <div className=\"blue eight wide column BigLogo\">\r\n                    <div className=\"BigLogo-content\">\r\n                        <img className=\"ow\" src=\"../../retry.png\"></img><br></br>                    </div>\r\n\r\n                </div>\r\n                <div id=\"sidebar\" className=\" eight wide column LandingMessage\">\r\n                    <div id=\"right-items\" className=\"content\">\r\n\r\n                        <h1 className=\"login-title\">Log In</h1>\r\n                        <Form className=\"login-form\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n                            <Form.Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"email\"\r\n                                value={state.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"password\"\r\n                                value={state.password}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Button\r\n                                color='blue'\r\n                                fluid size='large'\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                                disabled={invalidForm}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n\r\n                            <Message>\r\n                                New to us? <Link to='/signup'>Sign Up</Link>\r\n                            </Message>\r\n                            {error ? <ErrorMessage error={error} /> : null}\r\n                            <Message className=\"test-msg\">For testing purposes: <br></br>Email - tester@email.com<br></br>Password - tester</Message>\r\n\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id='mobile-tablet' className=\"row\">\r\n                <div id=\"sidebar\" className=\" sixteen wide column LandingMessage\">\r\n                    <div id=\"right-items\" className=\"mobile-content\">\r\n\r\n                        <h1 className=\"login-title\">Log In</h1>\r\n                        <Form className=\"login-form\" autoComplete=\"off\" onSubmit={handleSubmit}>\r\n\r\n                            <Form.Input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                placeholder=\"email\"\r\n                                value={state.email}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Form.Input\r\n                                name=\"password\"\r\n                                type=\"password\"\r\n                                placeholder=\"password\"\r\n                                value={state.password}\r\n                                onChange={handleChange}\r\n                                required\r\n                            />\r\n                            <Button\r\n                                color='blue'\r\n                                fluid size='large'\r\n                                type=\"submit\"\r\n                                className=\"btn\"\r\n                                disabled={invalidForm}\r\n                            >\r\n                                Login\r\n                            </Button>\r\n\r\n                            <Message>\r\n                                New to us? <Link to='/signup'>Sign Up</Link>\r\n                            </Message>\r\n                            {error ? <ErrorMessage error={error} /> : null}\r\n                            <Message className=\"test-msg\">For testing purposes: <br></br>Email - tester@email.com<br></br>Password - tester</Message>\r\n\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\HomePage\\HomePage.jsx",["129"],"import React from 'react';\r\n\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <div>\r\n        <div id=\"main\" className=\"ui vertically divided grid\">\r\n            <div id='non-mobile-tablet' className=\"row\">\r\n                <div id=\"left-side\" className=\"blue eight wide column BigLogo\">\r\n\r\n                    <div className=\"BigLogo-content\">\r\n                        <img className=\"ow\" src=\"../../retry.png\"></img><br></br>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n                <div style={{ background: 'fixed' }} id=\"sidebar\" className=\"eight wide column LandingMessage container\">\r\n                    <div id=\"right-items\" className=\"content\">\r\n                        <h1 className=\"title\">0verStats</h1>\r\n                        <span className=\"subtitle\"><h4>Overwatch statistics made easy. Developed with MongoDB, Express, React & Node</h4></span><br></br>\r\n                        <div id=\"buttons\" className=\"row\">\r\n                            <Link to='/login'><button id=\"button\" className=\"ui blue button\">Log In</button></Link>\r\n                            <Link to='/signup'><button id=\"button\" className=\"ui grey button\">Sign Up</button></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div id='mobile-tablet' className=\"row\">\r\n                <div style={{ background: 'fixed' }} id=\"sidebar\" className=\"sixteen wide column LandingMessage container\">\r\n                    <div id=\"right-items\" className=\"mobile-content\">\r\n                        <h1 className=\"title\">0verStats</h1>\r\n                        <span className=\"subtitle\"><h4>Overwatch statistics made easy. Developed with MongoDB, Express, React & Node</h4></span><br></br>\r\n                        <div id=\"buttons\" className=\"row\">\r\n                            <Link to='/login'><button id=\"button\" className=\"ui blue button\">Log In</button></Link>\r\n                            <Link to='/signup'><button id=\"button\" className=\"ui grey button\">Sign Up</button></Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        \r\n    )\r\n\r\n}","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\EditProfilePage\\EditProfilePage.jsx",[],"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\ProfilePage\\ProfilePage.jsx",["130","131"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\nimport MobileNavBar from '../../components/MobileNavBar/MobileNavBar';\r\nimport ProfileInfo from '../../components/ProfileInfo/ProfileInfo';\r\nimport Popup from '../../components/Popup/Popup';\r\nimport { Button } from 'semantic-ui-react'\r\n\r\n\r\n\r\n\r\nexport default function ProfilePage({ handleLogOut, user }) {\r\n    const [apiLink, setApiLink] = useState('')\r\n    const [profileData, setProfileData] = useState({})\r\n    const makeApiCall = () => {\r\n        fetch(apiLink)\r\n\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setProfileData(data)\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            let p = user.battletag.replace('#', '-')\r\n            let region = user.region.toLowerCase()\r\n            let platform = user.platform.toLowerCase()\r\n\r\n            setApiLink(`https://ow-api.com/v1/stats/${platform}/${region}/${p}/complete`)\r\n        }\r\n\r\n\r\n\r\n\r\n        if (apiLink !== '') {\r\n            makeApiCall();\r\n\r\n        }\r\n\r\n\r\n    }, [apiLink])\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"ui vertically divided grid\">\r\n            <Popup />\r\n            <div id='non-mobile-tablet-profile' className=\"row\">\r\n                <div id=\"sidebar\" className=\" three wide column\">\r\n                    <div className=\"BigLogo-content\">\r\n                        <NavBar user={user} handleLogOut={handleLogOut} />\r\n                    </div>\r\n                </div>\r\n                {profileData.competitiveStats ?\r\n                    <div className=\"blue thirteen wide column\">\r\n                        <div className=\"content\">\r\n                            {Object.keys(profileData).length ? <ProfileInfo profile={true} profileData={profileData} user={user} /> : <div className=\"ui massive active centered inline loader\"></div>}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div className=\"blue thirteen wide column\">\r\n                        <div id=\"edit-msg\" className=\"content\">\r\n                            <h1 >This is your profile page.<br></br> Please enter a valid battletag <Link to=\"/edit\" style={{ color: 'gold' }}>here</Link> </h1>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n            <div id='mobile-tablet-profile' className=\"row\">\r\n                {profileData.competitiveStats ?\r\n                    <div className=\"blue sixteen wide column\">\r\n                        <MobileNavBar user={user} handleLogOut={handleLogOut} />\r\n\r\n                        <div className=\"content\">\r\n                            {Object.keys(profileData).length ? <ProfileInfo profile={true} profileData={profileData} user={user} /> : <div className=\"ui massive active centered inline loader\"></div>}\r\n                        </div>\r\n                    </div>\r\n                    :\r\n                    <div id='mobile-content' className=\"blue sixteen wide column\">\r\n                        <br />\r\n                        <MobileNavBar user={user} handleLogOut={handleLogOut} />\r\n                        <div id=\"edit-msg\" className=\"content\">\r\n                            <h1 >This is your profile page.<br></br> Please enter a valid battletag <Link to=\"/edit\" style={{ color: 'gold' }}>here</Link> </h1>\r\n                        </div>\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\SearchPage\\SearchPage.jsx",[],"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\pages\\DeletePage\\DeletePage.jsx",["132"],"import React, {useState} from 'react';\r\nimport userService from '../../utils/userService';\r\nimport { Link } from 'react-router-dom';\r\nimport NavBar from '../../components/NavBar/NavBar';\r\n\r\n\r\n\r\nexport default function DeletePage({ handleLogOut, user }) {\r\n    // if the user is tester hide delete buttons\r\n    let tester;\r\n    if(user.username === 'tester'){\r\n        tester = true;\r\n    }\r\n   \r\n\r\n    async function handleClick() {\r\n        userService.deleteUser(user) // this will delete the user from the database\r\n        handleLogOut()\r\n\r\n    }\r\n\r\n    return (\r\n        <div id=\"main\" className=\"ui vertically divided grid\">\r\n            <div className=\"row\">\r\n                <div id=\"sidebar\" className=\"three wide column BigLogo\">\r\n                    <div className=\"BigLogo-content\">\r\n                        <NavBar user={user} handleLogOut={handleLogOut} />\r\n                    </div>\r\n                </div>\r\n                <div id=\"del-page\" className=\"blue thirteen wide column LandingMessage\">\r\n                    <div id=\"del-buttons\" className=\"content\">\r\n                 \r\n                        {tester ? \r\n                        <>\r\n                        <h1 >You can not delete tester account.<br></br></h1> \r\n                        <Link to='/profile'><button id=\"back-button\" className=\"ui grey button\"> Get me out of here  </button></Link>\r\n                        </>\r\n                        : \r\n<>\r\n                        <h1 >Are you sure you want to delete your account?<br></br> </h1> \r\n                        <Link to='/'><button id=\"del-button\" onClick={handleClick} className=\"ui red button\">Yes</button></Link>\r\n                        <Link to='/profile'><button id=\"del-button\" className=\"ui grey button\">No </button></Link>\r\n                        </>\r\n}\r\n                        \r\n                    \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\utils\\tokenService.js",["133"],"function setToken(token) {\r\n  if (token) {\r\n    // localStorage is given to us by the browser\r\n    localStorage.setItem('token', token);\r\n  } else {\r\n    localStorage.removeItem('token');\r\n  }\r\n}\r\n\r\nfunction getToken() {\r\n  let token = localStorage.getItem('token');\r\n  if (token) {\r\n    // Check if expired, remove if it is\r\n    // atob is a function that decodes a base-64 string\r\n    const payload = JSON.parse(atob(token.split('.')[1]));\r\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\r\n    if (payload.exp < Date.now() / 1000) {\r\n      localStorage.removeItem('token');\r\n      token = null;\r\n    }\r\n  }\r\n  return token;\r\n}\r\n\r\nfunction getUserFromToken() {\r\n  const token = getToken();\r\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\r\n}\r\n\r\nfunction removeToken() {\r\n  localStorage.removeItem('token');\r\n}\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n  getUserFromToken\r\n};","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\ErrorMessage\\ErrorMessage.jsx",[],"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\ProfileInfo\\ProfileInfo.jsx",["134","135","136","137","138","139","140"],"\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport BarChart from '../../components/BarChart/BarChart'\r\nimport Graph from '../../components/Graph/Graph';\r\nimport HeroElimsGraph from '../HeroElimsGraph/HeroElimsGraph';\r\nimport HeroTimeGraph from '../HeroTimeGraph/HeroTimeGraph';\r\nimport DamageGraph from '../DamageGraph/DamageGraph'\r\n\r\n\r\n\r\nexport default function ProfileInfo({ user, profileData, name, profile }) {\r\n\r\n  //this will scroll down to display hero stats\r\n  const scrollToDiv = (ref) => window.scrollTo(0, ref.current.offsetTop);\r\n  const isScroll = () => scrollToDiv(compRef);\r\n  const compRef = useRef(null);\r\n\r\n  //setting the current data to all heroes\r\n  const heroData = profileData.quickPlayStats.careerStats ? profileData.quickPlayStats.careerStats.allHeroes : 'No Hero Data'\r\n  const [currentHero, setCurrentHero] = useState('All')\r\n  const [heroeStats, setHeroeStats] = useState(heroData)\r\n\r\n  //this switches between competitive stats and quickplay\r\n  const [buttonQuick, setButtonQuick] = useState(true)\r\n  const [buttonComp, setButtonComp] = useState(false)\r\n  const [mode, setMode] = useState('Quickplay')\r\n  const [stats, setStats] = useState(profileData.quickPlayStats)\r\n\r\n\r\n  //getting the win rate for current game mode\r\n  const [winRatio, setWinRatio] = useState(0)\r\n\r\n  //setting the current selected hero from table\r\n  function handleClick(heroeStats, heroName) {\r\n    if (heroName === 'allHeroes') {\r\n      heroName = 'All'\r\n    }\r\n    setCurrentHero(heroName.charAt(0).toUpperCase() + heroName.slice(1))\r\n    setHeroeStats(heroeStats)\r\n    scrollToDiv(compRef)\r\n  }\r\n\r\n  //generating table of heros the player has used this season\r\n  const heroesList = stats.careerStats ? Object.entries(stats.careerStats).map((key, value) => {\r\n    let kills;\r\n    let deaths;\r\n    let kd;\r\n    let allHeroes;\r\n    let objTime\r\n    let fireTime\r\n\r\n    //Determining if player has the stats for this data in current season. Otherwise API doesnt send it back.\r\n    if (key[1].combat) {\r\n      key[1].combat.eliminations ? kills = key[1].combat.eliminations : kills = 0;\r\n      key[1].combat.deaths ? deaths = key[1].combat.deaths : deaths = 0;\r\n    } else {\r\n      kills = 0;\r\n      deaths = 0;\r\n    }\r\n    if (key[1].average) {\r\n      key[1].average.objectiveTimeAvgPer10Min ? objTime = key[1].average.objectiveTimeAvgPer10Min : objTime = 0\r\n      key[1].average.timeSpentOnFireAvgPer10Min ? fireTime = key[1].average.timeSpentOnFireAvgPer10Min : fireTime = 0\r\n    } else {\r\n      objTime = 0\r\n      fireTime = 0\r\n    }\r\n\r\n    kd = (kills / deaths).toFixed(2)\r\n    if (key[0] === 'allHeroes') {\r\n      allHeroes = 'All'\r\n    } else {\r\n      allHeroes = key[0].charAt(0).toUpperCase() + key[0].slice(1)\r\n    }\r\n\r\n    if (kills === 0) {\r\n      kd = 0\r\n    }\r\n    if (kills === 0 && deaths === 0) {\r\n      kd = 0\r\n    }\r\n    ////////////////////////////////////////////////////////////////////////////////\r\n    return (\r\n      <tr className=\"table-hover\" key={value} onClick={() => handleClick(key[1], key[0])}>\r\n        <td><b>{allHeroes}</b></td>\r\n        <td>{key[1].game.gamesWon ? key[1].game.gamesWon : 0}</td>\r\n        <td>{key[1].game.gamesLost}</td>\r\n        <td>{key[1].game.gamesWon ? (key[1].game.gamesWon / key[1].game.gamesPlayed).toFixed(2) : 0}</td>\r\n        <td>{kd}</td>\r\n        <td>{objTime}</td>\r\n        <td>{fireTime}</td>\r\n        <td>{key[1].game.timePlayed ? key[1].game.timePlayed : 0}</td>\r\n      </tr>\r\n    );\r\n  })\r\n    : []\r\n\r\n\r\n\r\n\r\n  //Switch between game modes for new stats\r\n  function changeQuick() {\r\n    setStats(profileData.quickPlayStats)\r\n    setMode('Quickplay')\r\n    setButtonQuick(true)\r\n    setButtonComp(false)\r\n    setHeroeStats(profileData.quickPlayStats.careerStats ? profileData.quickPlayStats.careerStats.allHeroes : 'No Hero Data')\r\n  }\r\n  function changeComp() {\r\n    setStats(profileData.competitiveStats)\r\n    setMode('Competitive')\r\n    setButtonQuick(false)\r\n    setButtonComp(true)\r\n    setHeroeStats(profileData.competitiveStats.careerStats ? profileData.competitiveStats.careerStats.allHeroes : 'No Hero Data')\r\n\r\n  }\r\n\r\n  // generating the win ratio for the current game mode\r\n  useEffect(() => {\r\n    if (stats) {\r\n      if (stats.games) {\r\n        const winRatioRaw = parseInt(stats.games.won) / parseInt(stats.games.played)\r\n        const winSplit = winRatioRaw.toFixed(2).toString().split('.')\r\n        setWinRatio(winSplit[1])\r\n\r\n      }\r\n\r\n    }\r\n\r\n\r\n  }, [stats])\r\n\r\n  return (\r\n\r\n\r\n    <>\r\n\r\n      <div style={{ width: '100%' }} className=\"profile\">\r\n        <div style={{ width: '100%' }} className=\"ui two column very relaxed grid\">\r\n          <div className=\"column\">\r\n\r\n            <div className=\"ui items\">\r\n              <div className=\"item\">\r\n                <a className=\"ui tiny image\">\r\n                  <img src={profileData.icon}></img>\r\n                </a>\r\n                <div id=\"profile-details\" className=\"content\">\r\n                  <a className=\"header\">{name ? name : user.battletag}</a>\r\n                  <div className=\"description\">\r\n                    <p>{profile ? <Link style={{ color: 'gold' }} to=\"/edit\">Edit Profile</Link> : null}</p>\r\n\r\n                    {profileData.ratings ?\r\n                      <div id=\"medals\" className=\"ui statistics\">\r\n                        <div className=\"statistic\">\r\n                          <div className=\"value\">\r\n                            <img src={profileData.ratings[0].rankIcon}></img>\r\n\r\n                          </div>\r\n                          <div className=\"label\">\r\n                            Tank\r\n          </div>\r\n                        </div>\r\n                        <div className=\"statistic\">\r\n                          <div className=\"value\">\r\n                            <img src={profileData.ratings ? profileData.ratings[1].rankIcon : null}></img>\r\n                          </div>\r\n                          <div className=\"label\">\r\n                            Damage\r\n          </div>\r\n                        </div>\r\n                        <div className=\"statistic\">\r\n                          <div className=\"value\">\r\n                            <img src={profileData.ratings ? profileData.ratings[2].rankIcon : null}></img>\r\n                          </div>\r\n                          <div className=\"label\">\r\n                            Support\r\n          </div>\r\n                        </div>\r\n                      </div>\r\n                      :\r\n                      <h1 className=\"hero-name\" style={{ color: 'black' }}>Unranked</h1>\r\n                    }\r\n                    <div id=\"medals\" className=\"ui statistics\">\r\n                      <div className=\"statistic\">\r\n                        <div className=\"value\">\r\n                          {stats.awards ? stats.awards.medalsGold : null}\r\n                        </div>\r\n                        <div className=\"label\">\r\n                          Gold Medals\r\n          </div>\r\n                      </div>\r\n                      <div className=\"statistic\">\r\n                        <div className=\"value\">\r\n                          {stats.awards ? stats.awards.medalsSilver : null}\r\n                        </div>\r\n                        <div className=\"label\">\r\n                          Silver Medals\r\n          </div>\r\n                      </div>\r\n                      <div className=\"statistic\">\r\n                        <div className=\"value\">\r\n                          {stats.awards ? stats.awards.medalsBronze : null}\r\n                        </div>\r\n                        <div className=\"label\">\r\n                          Bronze Medals\r\n          </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n            <h1 className=\"hero-name\">{mode}</h1>\r\n            <div className=\"profile-table\">\r\n              <table id=\"table\" className=\"ui selectable inverted blue table\">\r\n                <thead>\r\n                  <tr><th>Heroes</th>\r\n                    <th>Won</th>\r\n                    <th>Loss</th>\r\n                    <th>Win Rate</th>\r\n                    <th>K/D</th>\r\n                    <th>Avg Obj Time</th>\r\n                    <th>Avg Time On Fire</th>\r\n                    <th>Time Played</th>\r\n                  </tr></thead><tbody>\r\n                  {heroesList}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n          <div className=\"column\">\r\n\r\n            <div id=\"right-graph\" className=\"chart\" >\r\n\r\n              <div className=\"ui buttons\">\r\n\r\n                <button id=\"switch-buttons\" className={buttonQuick ? 'ui positive button' : 'ui button'} onClick={changeQuick}>Quickplay</button>\r\n                <div className=\"or\"></div>\r\n                <button id=\"switch-buttons\" className={buttonComp ? 'ui positive button' : 'ui button'} onClick={changeComp}>Competitive</button>\r\n              </div><br></br><br></br>\r\n              {stats.careerStats ? <BarChart stats={stats} heroe={false} profileData={profileData} winRatio={winRatio} /> : \"loading...\"}\r\n              {stats.careerStats ? <Graph stats={stats} profileData={profileData} winRatio={winRatio} /> : \"loading...\"}\r\n\r\n\r\n            </div>\r\n          </div>\r\n          <div style={{ backgroundColor: 'rgb(0,103,164)', backgroundImage: `url(/${currentHero.toLowerCase()}.png)`, backgroundPosition: 'left', backgroundRepeat: 'no-repeat' }} id=\"hero-img\" className=\"ui segment\">\r\n\r\n            <p></p>\r\n            <p></p>\r\n            <p className=\"hero-name\">Showing details for</p>\r\n            <span><h1 className=\"hero-name\">{currentHero}</h1></span>\r\n            <p></p>\r\n            <p></p>\r\n            <p></p>\r\n            <p></p>\r\n          </div>\r\n\r\n          <div id=\"lower\" className=\"ui grid\">\r\n            <div ref={compRef} className=\"four wide column\">{stats.careerStats ? <HeroElimsGraph stats={heroeStats} profileData={profileData} winRatio={winRatio} /> : \"loading...\"}</div>\r\n            <div className=\"four wide column\">{stats.careerStats ? <BarChart stats={heroeStats} heroe={true} profileData={profileData} winRatio={winRatio} /> : \"loading...\"}</div>\r\n            <div className=\"four wide column\">{stats.careerStats ? <HeroTimeGraph stats={heroeStats} profileData={profileData} winRatio={winRatio} /> : \"loading...\"}</div>\r\n            <div className=\"four wide column\">{stats.careerStats ? <DamageGraph stats={heroeStats} profileData={profileData} winRatio={winRatio} /> : \"loading...\"}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </>\r\n  )\r\n}","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\NavBar\\NavBar.jsx",["141","142","143","144"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Grid } from 'semantic-ui-react'\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\n\r\nexport default function NavBar({ handleLogOut, user, onClick }) {\r\n  console.log(user)\r\n  return (\r\n    <>\r\n      <Grid id=\"nav-bar\" className=\"nav\">\r\n        <Grid.Row>\r\n          <Grid.Column >\r\n            <h1 className=\"nav-title\">0verStats</h1>\r\n            <img className=\"nav-ow\" src=\"../../retry.png\"></img>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row className=\"menu-item\">\r\n          <Grid.Column><Link to=\"/profile\"><button id=\"nav-btn\" className=\"grey massive ui button\">Profile</button></Link></Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row className=\"menu-item\">\r\n          <Grid.Column><Link to=\"/search\" ><button onClick={onClick} id=\"nav-btn\" className=\"grey massive ui button\">Search</button></Link></Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row className=\"menu-item\">\r\n          <Grid.Column><Link to=\"/\" onClick={handleLogOut}><button id=\"nav-btn\" className=\"grey massive ui button\">Logout</button></Link></Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n\r\n      <Grid id=\"mobile-nav-bar\">\r\n        <Grid.Row >\r\n          <Grid.Column><Link to=\"/profile\"><button id=\"mobile-nav\" className=\"grey tiny ui button\">Profile</button></Link></Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column><Link to=\"/search\" ><button id=\"mobile-nav\" onClick={onClick}  className=\"grey tiny ui button\">Search</button></Link></Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row >\r\n          <Grid.Column><Link to=\"/\" onClick={handleLogOut}><button id=\"mobile-nav\"  className=\"grey tiny ui button\">Logout</button></Link></Grid.Column>\r\n        </Grid.Row>\r\n              \r\n      </Grid>\r\n\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\SearchForm\\SearchForm.jsx",[],"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\Graph\\Graph.jsx",["145"],"import React from 'react';\r\nimport CanvasJSReact from '../../canvasjs.react'\r\n\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n\r\nexport default function Graph({ winRatio, profileData, stats }) {\r\n\r\n    const options = {\r\n        backgroundColor: \"rgb(0,133,208)\",\r\n        title: {\r\n            text: `Overall Avg Kills/Deaths per 10mins`\r\n        },\r\n        data: [\r\n            {\r\n                type: \"column\",\r\n                dataPoints: [\r\n\r\n                    { label: \"Eliminations\", y: parseInt(stats.careerStats.allHeroes.average.eliminationsAvgPer10Min), color: \"rgb(100,248,40)\" },\r\n                    { label: \"Obj Kills\", y: parseInt(stats.careerStats.allHeroes.average.objectiveKillsAvgPer10Min), color: \"blue\" },\r\n                    { label: \"Deaths\", y: parseInt(stats.careerStats.allHeroes.average.deathsAvgPer10Min), color: \"rgb(255,23,25)\" },\r\n\r\n\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <CanvasJSChart options={options}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}\r\n","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\BarChart\\BarChart.jsx",["146"],"import React from 'react';\r\nimport CanvasJSReact from '../../canvasjs.react'\r\n\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n\r\nexport default function BarChart({ winRatio, profileData, stats, heroe }) {\r\n    let wins;\r\n    let losses;\r\n    let winRate;\r\n    let winRateSplit = []\r\n    let imSry;\r\n    // determine if the player has this information in their profile otherwise set it to 0\r\n    if (heroe) {\r\n        stats.game ? wins = stats.game.gamesWon : wins = 0\r\n        if (wins === undefined) {\r\n            wins = 0\r\n        }\r\n    }\r\n    if (heroe) {\r\n        stats.game ? losses = stats.game.gamesLost : losses = 0\r\n        if (losses === undefined) {\r\n            losses = 0;\r\n        }\r\n\r\n    }\r\n    if (heroe) {\r\n        const total = wins + losses\r\n        winRate = (wins / total)\r\n        winRateSplit = winRate.toFixed(2).toString().split('.')\r\n        if (winRateSplit[0] < 1) {\r\n            imSry = winRateSplit[1]\r\n        } else if (wins === 0 && losses === 0) {\r\n            imSry = 'N/A'\r\n        } else {\r\n            imSry = 100\r\n        }\r\n\r\n    }\r\n    ////////////////////////////////////\r\n\r\n    const options = {\r\n        backgroundColor: \"rgb(0,133,208)\",\r\n        title: {\r\n            text: heroe ? `Win Rate: ${imSry}%` : `Overall Win Rate: ${winRatio}%`\r\n        },\r\n        data: [\r\n            {\r\n                type: \"doughnut\",\r\n                dataPoints: [\r\n\r\n                    { label: \"Wins\", y: heroe ? wins : parseInt(stats.games.won), color: \"rgb(100,248,40)\" },\r\n                    { label: \"Losses\", y: heroe ? losses : parseInt(stats.games.played) - parseInt(stats.games.won), color: \"rgb(255,23,25)\" }\r\n\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <CanvasJSChart options={options}\r\n            />\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\HeroTimeGraph\\HeroTimeGraph.jsx",["147"],"import React from 'react';\r\nimport CanvasJSReact from '../../canvasjs.react'\r\n\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n\r\nexport default function HeroTimeGraph({ winRatio, profileData, stats }) {\r\n    //Check if the API sent back this info if not set to 0\r\n    let fireTime = stats.average\r\n    let fireTimeString;\r\n    let fireTimeFinal\r\n    fireTime.timeSpentOnFireAvgPer10Min ? fireTimeString = fireTime.timeSpentOnFireAvgPer10Min.toString().replace(':', '.') : fireTimeFinal = 0\r\n\r\n    if (fireTimeFinal !== 0) {\r\n        fireTimeFinal = parseFloat(fireTimeString)\r\n    }\r\n\r\n    let objTimeString;\r\n    let objTimeFinal\r\n    fireTime.objectiveTimeAvgPer10Min ? objTimeString = fireTime.objectiveTimeAvgPer10Min.toString().replace(':', '.') : objTimeFinal = 0\r\n\r\n    if (objTimeFinal !== 0) {\r\n        objTimeFinal = parseFloat(objTimeString)\r\n    }\r\n    ///////////////////////////////////\r\n\r\n\r\n\r\n\r\n    const options = {\r\n        backgroundColor: \"rgb(0,133,208)\",\r\n        title: {\r\n            text: `On Fire/Obj Time per 10mins`\r\n        },\r\n        data: [\r\n            {\r\n                type: \"column\",\r\n                dataPoints: [\r\n\r\n                    { label: \"On Fire\", y: fireTimeFinal, color: \"rgb(100,248,40)\" },\r\n                    { label: \"Objective Time\", y: objTimeFinal, color: \"yellow\" },\r\n\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <CanvasJSChart options={options} />\r\n        </div>\r\n    );\r\n}","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\DamageGraph\\DamageGraph.jsx",["148"],"import React from 'react';\r\nimport CanvasJSReact from '../../canvasjs.react'\r\n\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n\r\nexport default function DamageGraph({ stats }) {\r\n\r\n    /// Checking api sent back this info if not set to 0\r\n    let heals;\r\n    let dmg;\r\n    stats.average.healingDoneAvgPer10Min ? heals = stats.average.healingDoneAvgPer10Min : heals = 0;\r\n    stats.average.allDamageDoneAvgPer10Min ? dmg = stats.average.allDamageDoneAvgPer10Min : dmg = 0;\r\n    ////\r\n\r\n    const options = {\r\n        backgroundColor: \"rgb(0,133,208)\",\r\n        title: {\r\n            text: `Damage/Heals per 10mins`\r\n        },\r\n        data: [\r\n            {\r\n                type: \"column\",\r\n                dataPoints: [\r\n\r\n                    { label: \"Damage\", y: dmg, color: \"rgb(100,248,40)\" },\r\n                    { label: \"Heals\", y: heals, color: \"pink\" },\r\n\r\n\r\n\r\n\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <CanvasJSChart options={options}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\HeroElimsGraph\\HeroElimsGraph.jsx",["149"],"import React from 'react';\r\nimport CanvasJSReact from '../../canvasjs.react'\r\n\r\n\r\nvar CanvasJS = CanvasJSReact.CanvasJS;\r\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\r\n\r\n\r\nexport default function HeroElimsGraph({ stats }) {\r\n\r\n    const options = {\r\n        backgroundColor: \"rgb(0,133,208)\",\r\n        title: {\r\n            text: `Total Elims/Deaths`\r\n        },\r\n        data: [\r\n            {\r\n                type: \"column\",\r\n                dataPoints: [\r\n\r\n                    { label: \"Eliminations\", y: parseInt(stats.combat.eliminations), color: \"rgb(100,248,40)\" },\r\n                    { label: \"Obj Kills\", y: parseInt(stats.combat.objectiveKills), color: \"blue\" },\r\n                    { label: \"Deaths\", y: parseInt(stats.combat.deaths), color: \"rgb(255,23,25)\" },\r\n\r\n\r\n\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n    return (\r\n        <div>\r\n            <CanvasJSChart options={options}\r\n            />\r\n        </div>\r\n    );\r\n\r\n}","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\canvasjs.react.js",["150"],"﻿/*\r\nCanvasJS React Charts - https://canvasjs.com/\r\nCopyright 2021 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\r\nvar React = require('react');\r\nvar CanvasJS = require('./canvasjs.min');\r\nCanvasJS = CanvasJS.Chart ? CanvasJS : window.CanvasJS;\r\n\r\nclass CanvasJSChart extends React.Component {\r\n\tstatic _cjsContainerId = 0\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.options = props.options ? props.options : {};\r\n\t\tthis.containerProps = props.containerProps ? props.containerProps : { width: \"100%\", position: \"relative\" };\r\n\t\tthis.containerProps.height = props.containerProps && props.containerProps.height ? props.containerProps.height : this.options.height ? this.options.height + \"px\" : \"400px\";\r\n\t\tthis.chartContainerId = \"canvasjs-react-chart-container-\" + CanvasJSChart._cjsContainerId++;\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\t//Create Chart and Render\t\t\r\n\t\tthis.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\r\n\t\tthis.chart.render();\r\n\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(this.chart);\r\n\t}\r\n\tshouldComponentUpdate(nextProps, nextState) {\r\n\t\t//Check if Chart-options has changed and determine if component has to be updated\r\n\t\treturn !(nextProps.options === this.options);\r\n\t}\r\n\tcomponentDidUpdate() {\r\n\t\t//Update Chart Options & Render\r\n\t\tthis.chart.options = this.props.options;\r\n\t\tthis.chart.render();\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\t//Destroy chart and remove reference\r\n\t\tthis.chart.destroy();\r\n\t\tif (this.props.onRef)\r\n\t\t\tthis.props.onRef(undefined);\r\n\t}\r\n\trender() {\r\n\t\t//return React.createElement('div', { id: this.chartContainerId, style: this.containerProps });\t\t\r\n\t\treturn <div id={this.chartContainerId} style={this.containerProps} />\r\n\t}\r\n}\r\n\r\nvar CanvasJSReact = {\r\n\tCanvasJSChart: CanvasJSChart,\r\n\tCanvasJS: CanvasJS\r\n};\r\n\r\nexport default CanvasJSReact;","C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\canvasjs.min.js",[],"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\Popup\\Popup.jsx",[],"C:\\Users\\Andrew\\source\\repos\\OverStats\\src\\components\\MobileNavBar\\MobileNavBar.jsx",["151","152","153"],"import { React, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Form, Message } from 'semantic-ui-react'\r\nimport './MobileNavBar.css'\r\n\r\nexport default function MobileNavBar({ handleLogOut, user, onClick }) {\r\n    const [isNavExpanded, setIsNavExpanded] = useState(false)\r\n    return (\r\n        <nav className=\"navigation\">\r\n          <a href=\"/\" className=\"brand-name\">\r\n            OverStats\r\n          </a>\r\n          <button\r\n            className=\"hamburger\"\r\n            onClick={() => {\r\n              setIsNavExpanded(!isNavExpanded)\r\n            }}\r\n          >\r\n        {/* icon from Heroicons.com */}\r\n        <svg\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          className=\"h-5 w-5\"\r\n          viewBox=\"0 0 20 20\"\r\n          fill=\"white\"\r\n        >\r\n          <path\r\n            fillRule=\"evenodd\"\r\n            d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM9 15a1 1 0 011-1h6a1 1 0 110 2h-6a1 1 0 01-1-1z\"\r\n            clipRule=\"evenodd\"\r\n          />\r\n        </svg>\r\n          </button>\r\n          <div\r\n            className={\r\n              isNavExpanded ? \"navigation-menu expanded\" : \"navigation-menu\"\r\n            }\r\n          >\r\n            <ul>\r\n              <li>\r\n              <Link to=\"/profile\" >Profile</Link>              \r\n              </li>\r\n              <li>\r\n              <Link to=\"/search\" >Search</Link>\r\n              </li>\r\n              <li>\r\n              <Link to=\"/\" onClick={handleLogOut}>Logout</Link>    \r\n            </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n      );\r\n    }\r\n",{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","severity":1,"message":"159","line":19,"column":10,"nodeType":"160","messageId":"161","endLine":19,"endColumn":15},{"ruleId":"158","severity":1,"message":"162","line":19,"column":17,"nodeType":"160","messageId":"161","endLine":19,"endColumn":25},{"ruleId":"163","severity":1,"message":"164","line":83,"column":1,"nodeType":"165","endLine":90,"endColumn":3},{"ruleId":"158","severity":1,"message":"166","line":9,"column":25,"nodeType":"160","messageId":"161","endLine":9,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":82,"column":25,"nodeType":"169","endLine":82,"endColumn":67},{"ruleId":"158","severity":1,"message":"166","line":10,"column":25,"nodeType":"160","messageId":"161","endLine":10,"endColumn":37},{"ruleId":"167","severity":1,"message":"168","line":46,"column":25,"nodeType":"169","endLine":46,"endColumn":67},{"ruleId":"167","severity":1,"message":"168","line":16,"column":25,"nodeType":"169","endLine":16,"endColumn":67},{"ruleId":"158","severity":1,"message":"170","line":7,"column":10,"nodeType":"160","messageId":"161","endLine":7,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":43,"column":8,"nodeType":"173","endLine":43,"endColumn":17,"suggestions":"174"},{"ruleId":"158","severity":1,"message":"175","line":1,"column":16,"nodeType":"160","messageId":"161","endLine":1,"endColumn":24},{"ruleId":"163","severity":1,"message":"164","line":34,"column":1,"nodeType":"165","endLine":39,"endColumn":3},{"ruleId":"158","severity":1,"message":"176","line":16,"column":9,"nodeType":"160","messageId":"161","endLine":16,"endColumn":17},{"ruleId":"177","severity":1,"message":"178","line":144,"column":17,"nodeType":"169","endLine":144,"endColumn":46},{"ruleId":"167","severity":1,"message":"168","line":145,"column":19,"nodeType":"169","endLine":145,"endColumn":47},{"ruleId":"177","severity":1,"message":"178","line":148,"column":19,"nodeType":"169","endLine":148,"endColumn":41},{"ruleId":"167","severity":1,"message":"168","line":156,"column":29,"nodeType":"169","endLine":156,"endColumn":72},{"ruleId":"167","severity":1,"message":"168","line":165,"column":29,"nodeType":"169","endLine":165,"endColumn":101},{"ruleId":"167","severity":1,"message":"168","line":173,"column":29,"nodeType":"169","endLine":173,"endColumn":101},{"ruleId":"158","severity":1,"message":"170","line":4,"column":10,"nodeType":"160","messageId":"161","endLine":4,"endColumn":16},{"ruleId":"158","severity":1,"message":"179","line":4,"column":18,"nodeType":"160","messageId":"161","endLine":4,"endColumn":22},{"ruleId":"158","severity":1,"message":"180","line":4,"column":24,"nodeType":"160","messageId":"161","endLine":4,"endColumn":31},{"ruleId":"167","severity":1,"message":"168","line":14,"column":13,"nodeType":"169","endLine":14,"endColumn":59},{"ruleId":"158","severity":1,"message":"181","line":5,"column":5,"nodeType":"160","messageId":"161","endLine":5,"endColumn":13},{"ruleId":"158","severity":1,"message":"181","line":5,"column":5,"nodeType":"160","messageId":"161","endLine":5,"endColumn":13},{"ruleId":"158","severity":1,"message":"181","line":5,"column":5,"nodeType":"160","messageId":"161","endLine":5,"endColumn":13},{"ruleId":"158","severity":1,"message":"181","line":5,"column":5,"nodeType":"160","messageId":"161","endLine":5,"endColumn":13},{"ruleId":"158","severity":1,"message":"181","line":5,"column":5,"nodeType":"160","messageId":"161","endLine":5,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":1,"column":1,"nodeType":"184","messageId":"185","fix":"186"},{"ruleId":"158","severity":1,"message":"170","line":3,"column":10,"nodeType":"160","messageId":"161","endLine":3,"endColumn":16},{"ruleId":"158","severity":1,"message":"179","line":3,"column":18,"nodeType":"160","messageId":"161","endLine":3,"endColumn":22},{"ruleId":"158","severity":1,"message":"180","line":3,"column":24,"nodeType":"160","messageId":"161","endLine":3,"endColumn":31},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'setError' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'setValidForm' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'makeApiCall' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["189"],"'useState' is defined but never used.","'isScroll' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","'Form' is defined but never used.","'Message' is defined but never used.","'CanvasJS' is assigned a value but never used.","unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"190","text":"191"},"no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},[-1,0],"","Update the dependencies array to be: [apiLink, makeApiCall, user]",{"range":"194","text":"195"},[1201,1210],"[apiLink, makeApiCall, user]"]